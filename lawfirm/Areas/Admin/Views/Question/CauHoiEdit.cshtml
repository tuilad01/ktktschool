@model lawfirm.Areas.Admin.Models.Question.CauHoiModel

@{
    ViewBag.Title = "CauHoiEdit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>CauHoiEdit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CauHoiModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.CauHoi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CauHoi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CauHoi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GhiChu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GhiChu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GhiChu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KichHoat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.KichHoat)
                    @Html.ValidationMessageFor(model => model.KichHoat, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.QuestionLevelId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.QuestionLevelId, Model.QuestionLevel, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.QuestionLevelId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LopHocId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LopHocId, Model.LopHoc, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.LopHocId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MonHocId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MonHocId,Model.MonHoc, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.MonHocId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnswerRightId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AnswerRightId,Model.AnswerRight, new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.AnswerRightId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnswerA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnswerA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnswerA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnwserB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnwserB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnwserB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnwserC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnwserC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnwserC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnwserD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnwserD, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnwserD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnwserE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnwserE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnwserE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnwserF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnwserF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnwserF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RightYes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    Right: @Html.RadioButtonFor(model => model.RightYes, "Right")
                    Wrong: @Html.RadioButtonFor(model => model.RightYes, "Wrong")
                    Yes: @Html.RadioButtonFor(model => model.RightYes, "Yes")
                    No: @Html.RadioButtonFor(model => model.RightYes, "No")
                    @Html.ValidationMessageFor(model => model.RightYes, "", new { @class = "text-danger" })
                    <button type="button" class="btn btn-default" id="btnClearRightYes">Clear</button>
                </div>
            </div>
        </div>
        <div class="alert alert-danger">
            Chú ý: khi chọn các đáp án là "đúng, sai, không, có" thì hệ thống sẽ không thêm các đáp án là dạng câu hỏi a,b,c...<br />
            - Nút Clear dùng để hủy các đáp án "đúng, sai, không, có".
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "CauHoiList")
</div>
<script>
    $(document).ready(function() {
        $("#LopHocId").change(function() {
            var lophocId = $("#LopHocId").val();
            if (lophocId > 0) {
                $.post("@Html.Raw(Url.Action("GetMonHocByLopHoc"))", { LopHocId: lophocId })
                    .done(function (data) {
                        $('#MonHocId').html("");
                        $.each(data, function (key, value) {
                            $('#MonHocId')
                                .append($("<option></option>")
                                           .attr("value", value.Id)
                                           .text(value.Name));
                        });
                    })
                    .fail(function() {
                        alert("Server error");
                    });
            }
        });
    });
</script>